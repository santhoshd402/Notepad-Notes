
https://kubernetes.io/docs/reference/       ----> 1.16


kubeadm get nodes -w
kubectl get --help
kubectl get pods --all-namespaces
kubectl get nodes -o wide
kubectl api-versions
kubectl api-resources | grep pod


To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.49.80:6443 --token hs4bxe.67nzlx09ki5ttw2q \
    --discovery-token-ca-cert-hash sha256:d87940c8cecb72df7a5b0673f314970bf94914d84f41394c30a71a112c41048e


kubctl apply -f test.yml
kubectl delete -f test.yml
	
	
kubectl api-resources | grep pod
	
kubectl apply -f pod.yml
kubectl get pods
kubectl delete -f pod.yml
kubectl get pod nginix -oyaml
kubectl get mytomcat -oyaml | less (to see spec and status of the tomcat o/p in form of yaml)
kubectl describe pod tomcat
kubectl get pod mytomcat -o wide

kubernetes api reference


---
apiVersion : v1
kind : Pod
metadata : 
  name : mytomcat
spec : 
  containers : 
    - image : "tomcat:8"
      name : tomcatimg
      ports : 
        - containerPort : 8080
          protocol : TCP


